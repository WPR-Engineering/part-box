version: '3.8'
services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: 
      POSTGRES_PASSWORD: 
      POSTGRES_DB: partbox_prod
    volumes:
      - postgres:/var/lib/postgresql/data
    ports: 
      - "3306:3306"
  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  elasticsearch:
    image: elasticsearch:8.8.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: "single-node"
      xpack.security.enabled: "false"

  sidekiq:
    build: wprbartos/part-box-docker-sidekiq/test.2
    platform: linux/x86_64
    environment:
      RAILS_ENV: production
      SECRET_KEY_BASE: 
      DB_USER: 
      DB_PASSWORD: 
      DB_NAME: partbox_prod
      DB_HOST: db
      DB_PORT: 3306
      PRINTING_ENABLED: "false"
      LARGE_PRINT_QUEUE: large
      MED_PRINT_QUEUE: med
      SMALL_PRINT_QUEUE: small
      ITEM_TAG_PRINTER: small
      BASE_URL: http://localhost
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: 
      RABBIT_PASS: 
    ports: 
      - "3000:3000"
    command: bundle exec sidekiq -e production
    depends_on:
      - redis




  rabbitMQ:
    image: rabbitmq:management
    ports:
      - "15672:15672"
      - "5672:5672"

  web:
    build: .
    platform: linux/x86_64
    volumes:
      - .:/Rails-Docker:rw
    environment:
      RAILS_ENV: production
      RAILS_SERVE_STATIC_FILES: true
      SECRET_KEY_BASE: 
      DB_USER: 
      DB_PASSWORD: 
      DB_NAME: 
      DB_HOST: db
      DB_PORT: 3306
      PRINTING_ENABLED: "false"
      LARGE_PRINT_QUEUE: large
      MED_PRINT_QUEUE: med
      SMALL_PRINT_QUEUE: small
      ITEM_TAG_PRINTER: small
      BASE_URL: http://localhost
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: 
      RABBIT_PASS: 
      NETBOX_ENABLED: "false"
      NETBOX_URL: ""
      NETBOX_KEY: ""
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 80"
    ports:
      - "80:80"

    depends_on:
      - db
      - redis
      - sidekiq
      - elasticsearch
volumes:
  postgres:
